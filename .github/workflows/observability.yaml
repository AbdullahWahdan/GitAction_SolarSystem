name: deploy-helm-monitoring

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.3.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig
        run: aws eks --region us-east-1 update-kubeconfig --name GP-cluster

      - name: Install Helm
        uses: azure/setup-helm@v3

      - name: Create MongoDB Secret
        run: |
          kubectl create namespace solar-system --dry-run=client -o yaml | kubectl apply -f -
          kubectl create secret generic mongo-credentials \
            --namespace solar-system \
            --from-literal=MONGO_URI=${{ vars.MONGO_URI }} \
            --from-literal=MONGO_USERNAME=${{ vars.MONGO_USERNAME }} \
            --from-literal=MONGO_PASSWORD=${{ secrets.MONGO_PASSWORD }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Solar System via Helm
        run: |
          helm upgrade --install solar-system ./helm/solar-system-chart \
            --namespace solar-system --create-namespace

      - name: Add Prometheus Helm Repo
        run: |
          helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
          helm repo update

      - name: Install Prometheus
        run: |
          helm upgrade --install prometheus prometheus-community/prometheus \
            --namespace solar-system --create-namespace

      - name: Add Grafana Helm Repo
        run: |
          helm repo add grafana https://grafana.github.io/helm-charts
          helm repo update

      - name: Install Grafana
        run: |
          helm upgrade --install grafana grafana/grafana \
            --namespace solar-system --create-namespace \
            --set adminUser=admin,adminPassword=${{ secrets.GRAFANA_PASSWORD }} \
            --set service.type=LoadBalancer

      - name: Output Service URLs
        run: |
          echo "Solar System App External IP:"
          kubectl get svc -n solar-system solar-system -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
          
          echo "Prometheus External IP:"
          kubectl get svc -n solar-system prometheus-server -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
          
          echo "Grafana External IP:"
          kubectl get svc -n solar-system grafana -o jsonpath='{.status.loadBalancer.ingress[0].hostname}'
